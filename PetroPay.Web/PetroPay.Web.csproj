<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net5.0</TargetFramework>
        <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
        <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
        <IsPackable>false</IsPackable>
        <SpaRoot>ClientApp\</SpaRoot>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="AutoMapper" Version="10.1.1" />
        <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="8.1.1" />
        <PackageReference Include="BCrypt.Net-Next" Version="4.0.2" />
        <PackageReference Include="FluentValidation" Version="10.0.2" />
        <PackageReference Include="MailKit" Version="2.11.1" />
        <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="5.0.5" />
        <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="5.0.5" />
        <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="5.0.2" />
        <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="5.0.1" />
        <PackageReference Include="Newtonsoft.Json" Version="13.0.1" />
        <PackageReference Include="NLog" Version="4.7.9" />
        <PackageReference Include="NLog.Web.AspNetCore" Version="4.12.0" />
        <PackageReference Include="Swashbuckle.AspNetCore" Version="6.1.2" />
        <PackageReference Include="TimePeriodLibrary.NET" Version="2.1.1" />
    </ItemGroup>

    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**" />
        <None Remove="$(SpaRoot)**" />
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
    </ItemGroup>

    <ItemGroup>
      <Folder Include="Controllers\Reports\InvoiceDetails" />
      <Folder Include="Database" />
    </ItemGroup>

    <ItemGroup>
      <ProjectReference Include="..\PetroPay.Core\PetroPay.Core.csproj" />
      <ProjectReference Include="..\PetroPay.DataAccess\PetroPay.DataAccess.csproj" />
    </ItemGroup>

    <ItemGroup>
      <_ContentIncludedByDefault Remove="Publish\web.config" />
      <_ContentIncludedByDefault Remove="Publish\appsettings.Development.json" />
      <_ContentIncludedByDefault Remove="Publish\appsettings.json" />
      <_ContentIncludedByDefault Remove="Publish\ClientApp\build\asset-manifest.json" />
      <_ContentIncludedByDefault Remove="Publish\ClientApp\build\i18n\ar.json" />
      <_ContentIncludedByDefault Remove="Publish\ClientApp\build\i18n\en.json" />
      <_ContentIncludedByDefault Remove="Publish\ClientApp\build\manifest.json" />
      <_ContentIncludedByDefault Remove="Publish\PetroPay.Web.deps.json" />
      <_ContentIncludedByDefault Remove="Publish\PetroPay.Web.runtimeconfig.json" />
    </ItemGroup>

    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    </Target>

    <!--<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        &lt;!&ndash; As part of publishing, ensure the JS resources are freshly built in production mode &ndash;&gt;
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

        &lt;!&ndash; Include the newly-built files in the publish output &ndash;&gt;
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)build\**; $(SpaRoot)build-ssr\**" />
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>%(DistFiles.Identity)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
                <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>-->

</Project>
